name: CD

on:
  push:
    branches:
      - master
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK 8
        uses: actions/setup-java@v5
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: 'mvn -B clean package --file pom.xml'
      - name: Get version
        run: echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Create GitHub Release
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const response = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: 'v${{ env.RELEASE_VERSION }}',
                name: 'LanServers ${{ env.RELEASE_VERSION }}',
                draft: true,
                generate_release_notes: true,
              });
            
              await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: response.data.id,
                name: 'lanservers-${{ env.RELEASE_VERSION }}.jar',
                data: fs.readFileSync('target/lanservers-${{ env.RELEASE_VERSION }}.jar')
              });
            } catch (error) {
              core.setFailed(error.message);
            }
